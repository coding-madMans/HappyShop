// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["dataProxy"]
}

datasource db {
  provider = "postgresql"
  url      = "postgres://postgres:postgres@localhost:5432/HappyShop?connect_timeout=5&schema=public"
}

model User {
  id           String     @id @default(uuid())
  Name         String
  DOB          DateTime
  Email        String
  Password     String
  PasswordHash String
  contact      String
  Type         String
  Address      Address[]
  Item         Item[]
  Rating       Rating[]
  Cart         Cart[]
  WishList     WishList[]
  Orders       Orders[]
}

model Address {
  id      String @id @default(uuid())
  User_id User   @relation(fields: [userId], references: [id])
  City    String
  State   String
  Country String
  Pin     Int
  userId  String @unique
}

model Item {
  id        String     @id @default(uuid())
  Seller_id User       @relation(fields: [userId], references: [id])
  Name      String
  Price     Float
  Quantity  Float
  userId    String
  Images    Images[]
  Tags      Tags[]
  Rating    Rating[]
  Cart      Cart[]
  WishList  WishList[]
  Billing   Billing[]
}

model Images {
  id        String @id @default(uuid())
  Item_id   Item   @relation(fields: [itemId], references: [id])
  Image_URL String
  itemId    String
}

model Tags {
  id       String @id @default(uuid())
  Item_id  Item   @relation(fields: [itemId], references: [id])
  Category String
  itemId   String
}

model Rating {
  id       String @id @default(uuid())
  User_id  User   @relation(fields: [userId], references: [id])
  Item_id  Item   @relation(fields: [itemId], references: [id])
  Rating   Int
  Comments String
  userId   String
  itemId   String
}

model Cart {
  id       String @id @default(uuid())
  User_id  User   @relation(fields: [userId], references: [id])
  Item_id  Item   @relation(fields: [itemId], references: [id])
  Quantity Int
  userId   String
  itemId   String
}

model WishList {
  id      String @id @default(uuid())
  User_id User   @relation(fields: [userId], references: [id])
  Item_id Item   @relation(fields: [itemId], references: [id])
  userId  String
  itemId  String
}

model Billing {
  id       String   @id @default(uuid())
  Item_id  Item     @relation(fields: [itemId], references: [id])
  Quantity Int
  Price    Float
  itemId   String
  Orders   Orders[]
}

model Orders {
  id          String   @id @default(uuid())
  User_id     User     @relation(fields: [userId], references: [id])
  Bill_id     Billing  @relation(fields: [billingId], references: [id])
  PaymentType String
  Time        DateTime
  userId      String
  billingId   String
}
